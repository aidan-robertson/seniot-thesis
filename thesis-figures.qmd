---
title: "Thesis Figures"
format: html
editor: visual
---

# Packages
```{r}
#| message: false
# general use
library(tidyverse)
library(readxl)
library(here)
library(janitor)
library(car)
library(effectsize)
library(rstatix)
library(multcomp)
library(extrafont)
font_import()
loadfonts(device="win")
fonts()
windowsFonts(Times=windowsFont("Times New Roman"))

theme_bottomlegend <- theme_minimal() %+replace% 
                           theme(legend.position = "bottom")

theme_set(theme_bottomlegend)
```

# Data Reading
```{r}
veg_data <- read_xlsx(path = here("data", 
                        "post_treatment_veg_all.xlsx"),
                         sheet = "CCBER_VegMonitoring_Quadrat_4")

seeded_cover <- read_xlsx(path = here("data",
                          "post_treatment_veg_all.xlsx"),
                         sheet = "native_plants_begin_0")

burn_temps <- read_xlsx(path = here("data", 
                        "Burn Temps.xlsx"))

fuel_depth <- read_xlsx(path = here("data",
                          "fuel depth.xlsx"))

density_seeded <- read_xlsx(path = here("data", 
                        "density_count veg data.xlsx"))

subplot_area <- read_xlsx(path = here("data", 
                        "subplot size.xlsx"),
                        sheet = "Sheet2")
```

# Cleaning
```{r}
# veg cover data, includes N, NN, thatch cover
veg_data_clean <- veg_data %>% 
  clean_names() %>% 
dplyr::select(global_id, monitoring_date, unlisted_lagoon_transect_name_number, transect_distance_of_quadrat, count_of_native_species, sum_of_native_cover, sum_of_non_native_cover, count_of_non_native_species, sum_of_unknown_cover, sum_of_thatch, bare_ground, sum_of_all_cover) %>% 
  rename(treatment = unlisted_lagoon_transect_name_number,
         native_count = count_of_native_species,
         native_cover = sum_of_native_cover,
         nonnative_count = count_of_non_native_species,
         nonnative_cover = sum_of_non_native_cover,
         thatch_cover = sum_of_thatch,
         plot = transect_distance_of_quadrat) %>% 
  mutate(total_cover = sum_of_all_cover - sum_of_unknown_cover) %>% 
  mutate(weeding = case_when(
             treatment == "Thatch-None" ~ "Thatch Removal",
             treatment == "Thatch-Low" ~ "Thatch Removal",
             treatment == "Thatch-High" ~ "Thatch Removal",
             treatment == "Control-None" ~ "Control",
             treatment == "Control-Low" ~ "Control",
             treatment == "Control-High" ~ "Control",
             treatment == "Burn-None" ~ "Burn",
             treatment == "Burn-Low" ~ "Burn",
             treatment == "Burn-High" ~ "Burn",
             treatment == "Clethodim-None" ~ "Herbicide",
             treatment == "Clethodim-Low" ~ "Herbicide",
             treatment == "Clethodim-High" ~ "Herbicide"),
         seeding = case_when(
             treatment == "Thatch-None" ~ "None",
             treatment == "Thatch-Low" ~ "Low",
             treatment == "Thatch-High" ~ "High",
             treatment == "Control-None" ~ "None",
             treatment == "Control-Low" ~ "Low",
             treatment == "Control-High" ~ "High",
             treatment == "Burn-None" ~ "None",
             treatment == "Burn-Low" ~ "Low",
             treatment == "Burn-High" ~ "High",
             treatment == "Clethodim-None" ~ "None",
             treatment == "Clethodim-Low" ~ "Low",
             treatment == "Clethodim-High" ~ "High")) %>% 
  mutate(weeding= fct_relevel(weeding, "Control", "Thatch Removal", "Herbicide", "Burn"),
         seeding = fct_relevel(seeding, "None", "Low", "High"))

# cover of 3 seeded species
globaltreatments <- veg_data_clean %>% dplyr::select(global_id, weeding, seeding, plot)

cameclean <- seeded_cover %>% clean_names() %>%
  dplyr::select(native_species, native_species_percent_cover, parent_global_id) %>% 
  rename(global_id = parent_global_id,
         species = native_species,
         cover = native_species_percent_cover) %>% 
    mutate(species = case_when(
    species == "Calandrinia_menziesii" ~ "CAME")) %>% 
  filter(species == "CAME") 
camemerge <- merge(cameclean, globaltreatments, by=c("global_id"), all = TRUE) %>% 
  replace_na(list(cover = 0, species = "CAME"))

phdiclean <- seeded_cover %>% clean_names() %>%
  dplyr::select(native_species, native_species_percent_cover, parent_global_id) %>% 
  rename(global_id = parent_global_id,
         species = native_species,
         cover = native_species_percent_cover) %>% 
    mutate(species = case_when(
    species == "Phacelia_distans" ~ "PHDI")) %>% 
  filter(species == "PHDI") 
phdimerge <- merge(phdiclean, globaltreatments, by=c("global_id"), all = TRUE) %>% 
  replace_na(list(cover = 0, species = "PHDI"))
  
clpuclean <- seeded_cover %>% clean_names() %>%
  dplyr::select(native_species, native_species_percent_cover, parent_global_id) %>% 
  rename(global_id = parent_global_id,
         species = native_species,
         cover = native_species_percent_cover) %>% 
    mutate(species = case_when(
    species == "Clarkia_purpurea" ~ "CLPU")) %>% 
  filter(species == "CLPU") 
clpumerge <- merge(clpuclean, globaltreatments, by=c("global_id"), all = TRUE) %>% 
  replace_na(list(cover = 0, species = "CLPU"))

cameclpumerge<- merge(clpumerge, camemerge, by = c("global_id", "weeding", "seeding", "plot"))

allseededcover <- merge(cameclpumerge, phdimerge, by=c("global_id", "weeding", "seeding", "plot")) %>% 
  rename(CLPU = cover.x, CAME = cover.y, PHDI = cover) %>% 
  dplyr::select(global_id, CLPU, CAME, PHDI, weeding, seeding, plot) %>% 
  pivot_longer(cols = CLPU:PHDI) %>% 
  rename(species = name,
         cover = value) %>% 
    filter(! seeding  == "None")

# count of 3 seeded species 
density_seeded_clean <- density_seeded %>% 
  group_by(species, weeding, seeding) %>% 
  mutate(weeding = case_when(
             weeding == "thatch" ~ "Thatch Removal",
             weeding == "clethodim" ~ "Herbicide",
             weeding == "burn" ~ "Burn",
             weeding == "control" ~ "Control")) %>% 
  mutate(seeding = case_when(
    seeding == "none" ~ "None",
    seeding == "low" ~ "Low",
    seeding == "high" ~ "High"))

# area of each subplot
subplot_area_clean <- subplot_area %>% clean_names() %>%  group_by(weeding, seeding) %>% filter(! seeding == "none") %>% 
  mutate(weeding = case_when(
             weeding == "thatch removal" ~ "Thatch Removal",
             weeding == "herbicide" ~ "Herbicide",
             weeding == "burn" ~ "Burn",
             weeding == "control" ~ "Control")) %>% 
  mutate(seeding = case_when(
    seeding == "low" ~ "Low",
    seeding == "high" ~ "High"))

# success rate for each plot
successrateeach <- merge(density_seeded_clean, subplot_area_clean, by=c("seeding", "weeding", "species"), all = TRUE) %>% filter(!seeding == "None") %>% 
  mutate(success_rate = (count/seeds_meter) * 100) %>% 
   mutate(weeding= fct_relevel(weeding, "Control", "Thatch Removal", "Herbicide", "Burn"),
         seeding = fct_relevel(seeding, "Low", "High"),
         species = fct_relevel(species, "CAME", "PHDI", "CLPU"))

successrate_wide <- successrateeach %>%  dplyr::select(weeding, seeding, species, success_rate, plot) %>%  pivot_wider(names_from = species, values_from = success_rate)

# success rate averaged per subplot
seededmeans <- density_seeded_clean %>% 
  reframe(mean = mean(count)) %>% 
  filter(!seeding == "none") %>% 
  rename(averagecount = mean)

successrate <- merge(seededmeans, subplot_area_clean, by=c("seeding","weeding", "species")) %>% 
  mutate(success_rate = (averagecount/seeds_meter) * 100) %>% 
   mutate(weeding= fct_relevel(weeding, "Control", "Thatch Removal", "Herbicide", "Burn"),
         seeding = fct_relevel(seeding, "Low", "High"),
         species = fct_relevel(species, "CAME", "PHDI", "CLPU"))

# just thatch
thatch_native <- veg_data_clean %>% dplyr::select(weeding, seeding, plot, native_cover, thatch_cover, nonnative_cover) 

countsum <- density_seeded_clean %>% group_by(weeding, seeding, species) %>% 
  reframe(countsum = sum(count)) %>% 
  mutate(species = fct_relevel(species, "CAME", "PHDI", "CLPU"))
TNaverage <- thatch_native %>% group_by(weeding, seeding) %>% 
  reframe(native_avg = mean(native_cover),
          thatch_avg = mean(thatch_cover))

veg_seeded <- merge(thatch_native, density_seeded_clean, by=c("weeding", "seeding", "plot")) %>% 
  filter(! seeding == "None") %>% 
  mutate(species = fct_relevel(species, "CAME", "PHDI", "CLPU"))

TNsum <- merge(countsum, TNaverage, by=c("weeding", "seeding")) 

coverveg_seeded <- merge(veg_seeded, allseededcover, by = c("weeding","seeding", "species", "plot")) %>% dplyr::select(! global_id)

all_seeded <- merge(coverveg_seeded, successrateeach, by = c("weeding","seeding", "species", "plot", "count", "date")) %>%  dplyr::select(weeding, seeding, plot, species, native_cover, nonnative_cover, thatch_cover, cover, count, success_rate) %>% mutate(percent_seeded = (cover/native_cover) * 100) 

TN_seeded_wide <- merge(thatch_native, successrate_wide, by=c("weeding", "seeding", "plot"))

# burn
fuel_depth_clean <- fuel_depth %>% clean_names %>% dplyr::select(edge, meters_from_edge, depth) %>% 
  rename(block = edge,
         distance = meters_from_edge,
         fuel_depth = depth)

burn_temps_block <- burn_temps %>% clean_names() %>% 
  rename(distance = distance_from_edge_m,
         block = edge,
         tag_depth = depth)

fuel_burn_temp <- merge(fuel_depth_clean, burn_temps_block, by=c("block","distance"))
```

# ANOVAS & Plots
## ⭐Thatch Cover 
```{r}
thatch_summary <- veg_data_clean %>%  group_by(weeding)

summarize(thatch_summary, mean = mean(thatch_cover), sd = sd(thatch_cover))

hist(veg_data_clean $ thatch_cover)
## bimodal, doing Kruskal-Wallis

kruskal.test(thatch_cover ~ weeding,
             data = veg_data_clean)
## chi-squared 73.12, df = 3, p > 0.001

dunn_test(thatch_cover ~ weeding, 
          data = veg_data_clean)
## all pairwise combinations are significant except for thatch-removal and control, which have similar thatch cover post-treatment. [blank]-burn statistics are all negative, with herbicide and burn being largest difference, and thatch removal and control being fairly similar. For herbicide, both control and thatch removal have similar statistics, meaning that they have a similar difference in thatch cover ti herbicide.

kruskal_effsize(thatch_cover ~ weeding, 
          data = veg_data_clean)
## large effect size 

# plot
ggplot(veg_data_clean) +
  aes(x = weeding, y = thatch_cover, color = weeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  ylim(0,100) +
  scale_color_manual(values = c("#38A800", "#FF327C", "#00A9E6", "#F77600")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Treatment")
```

## ⭐Native Cover
```{r}
hist(veg_data_clean $ native_cover)

nativecover_aov <- aov(sqrt(native_cover) ~ weeding * seeding, data = veg_data_clean)

summary(nativecover_aov)

plot(nativecover_aov)

cooksnativeaov <- cooks.distance(nativecover_aov)

plot(cooksnativeaov)
## all looking fairly normal! make sure to note that i took square root of native cover

leveneTest(sqrt(native_cover) ~ weeding * seeding, veg_data_clean)
## variances not sig, yay!

TukeyHSD(nativecover_aov)
## post-hoc slay, elab on pairwise combinations

effectsize::eta_squared(nativecover_aov)
# effect size is large for weeding effect, not seeding

# plot
ggplot(veg_data_clean) +
  aes(x = weeding, y = native_cover, color = seeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#e52e39", "#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Seeding Rate")

```

## ⭐Non-native Cover
```{r}
hist(veg_data_clean $ nonnative_cover)

nonnativecover_aov <- aov(sqrt(nonnative_cover) ~ weeding * seeding, data = veg_data_clean)

summary(nonnativecover_aov)

plot(nonnativecover_aov)

cooksnonnativeaov <- cooks.distance(nonnativecover_aov)

plot(cooksnonnativeaov)
## all looking fairly normal! make sure to note that i took square root of nonnative cover

leveneTest(sqrt(nonnative_cover) ~ weeding * seeding, veg_data_clean)
## variances sig O----O

TukeyHSD(nonnativecover_aov)
## post-hoc slay, elab on pairwise combinations

effectsize::eta_squared(nonnativecover_aov)
# effect size is large for weeding effect, not seeding

# plot
ggplot(veg_data_clean) +
  aes(x = weeding, y = nonnative_cover, color = seeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#e52e39", "#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Seeding Rate")

```

## Cover Plot
```{r}
ggplot(data = allseededcover) +
  aes(x = weeding, y = cover, color = seeding) +
  geom_boxplot() +
  geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  facet_wrap(vars(species)) + theme_minimal() +
  scale_color_manual(values = c("#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Seeding Rate") +
  theme(axis.text.x = element_text(angle = 30))
```

## ⭐CAME Cover
```{r}
CAMEcover <- allseededcover %>% dplyr::select(species, weeding, seeding, cover) %>% 
  filter(species == "CAME")

hist(CAMEcover $ cover)

camecover_aov <- aov(sqrt(cover) ~ weeding * seeding, data = CAMEcover)

summary(camecover_aov)

plot(camecover_aov)

cookscamecoveraov <- cooks.distance(camecover_aov)

plot(cookscamecoveraov)
# like kind of normal?

leveneTest(sqrt(cover) ~ weeding * seeding, CAMEcover)
## variances are not equal :/

TukeyHSD(camecover_aov)

effectsize::eta_squared(camecover_aov)
# large effect for weeding

ggplot(CAMEcover) +
  aes(x = weeding, y = cover, color = seeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Seeding Rate")
```

## ⭐PHDI Cover
```{r}
PHDIcover <- allseededcover %>% dplyr::select(species, weeding, seeding, cover) %>% 
  filter(species == "PHDI")

hist(PHDIcover $ cover)

phdicover_aov <- aov(cover ~ weeding * seeding, data = PHDIcover)

summary(phdicover_aov)

plot(phdicover_aov)

cooksphdicoveraov <- cooks.distance(phdicover_aov)

plot(cooksphdicoveraov)
# like kind of normal?

leveneTest(cover ~ weeding * seeding, PHDIcover)
## variances are not equal :/

TukeyHSD(phdicover_aov)

effectsize::eta_squared(phdicover_aov)
# medium effect for weeding

ggplot(PHDIcover) +
  aes(x = weeding, y = cover, color = seeding) +
  geom_boxplot() +
   geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Seeding Rate")
```

## ⭐CLPU Cover < NOT helpful, only ever 0 or 1 CLPU cover
```{r}
CLPUcover <- allseededcover %>% dplyr::select(species, weeding, seeding, cover) %>% 
  filter(species == "CLPU")

summarize(CLPUcover, mean = mean(cover), sd = sd(cover))

hist(CLPUcover $ cover)

clpucover_aov <- aov(cover ~ weeding * seeding, data = CLPUcover)

summary(clpucover_aov)

plot(clpucover_aov)

cooksclpucoveraov <- cooks.distance(clpucover_aov)

plot(cooksclpucoveraov)
# like kind of normal?

leveneTest(cover ~ weeding * seeding, CLPUcover)
## variances are equal!

TukeyHSD(clpucover_aov)

effectsize::eta_squared(clpucover_aov)

ggplot(CLPUcover) +
  aes(x = weeding, y = cover, color = seeding) +
  geom_boxplot() +
  geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Cover (%)",
       color = "Seeding Rate")
```

## Success Rate Plot
```{r}
ggplot(data = successrateeach) +
  aes(x = weeding, y = success_rate, color = seeding) +
  geom_boxplot() +
  facet_wrap(vars(species)) + theme_minimal() +
      scale_color_manual(values = c("#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Success",
       color = "Seeding Rate") +
  theme(axis.text.x = element_text(angle = 30))
```

## CAME Success
```{r}
CAMEsuccess <- successrateeach %>% filter(species == "CAME")

hist(CAMEsuccess $ success_rate)

camesuccess_aov <- aov(sqrt(success_rate) ~ weeding * seeding, data = CAMEsuccess)

summary(camesuccess_aov)

plot(camesuccess_aov)

cookscamesuccessaov <- cooks.distance(camesuccess_aov)

plot(cookscamesuccessaov)
# okay-ish normal

leveneTest(success_rate ~ weeding * seeding, CAMEsuccess)
## variances are NOT equal :/

TukeyHSD(camesuccess_aov)

effectsize::eta_squared(camesuccess_aov)
# weeding large effect

ggplot(CAMEsuccess) +
  aes(x = weeding, y = success_rate, color = seeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
      scale_color_manual(values = c("#FFC567", "#67C0AC")) +
  labs(x = "Treatment",
       y = "Success",
       color = "Seeding Rate")
```

## PHDI Success
```{r}
PHDIsuccess <- successrateeach %>% filter(species == "PHDI")

hist(PHDIsuccess $ success_rate)

phdisuccess_aov <- aov(success_rate ~ weeding * seeding, data = PHDIsuccess)

summary(phdisuccess_aov)

plot(phdisuccess_aov)

cooksphdisuccessaov <- cooks.distance(phdisuccess_aov)

plot(cooksphdisuccessaov)
# okay-ish normal???

leveneTest(success_rate ~ weeding * seeding, PHDIsuccess)
## variances are NOT equal :/

TukeyHSD(phdisuccess_aov)

effectsize::eta_squared(phdisuccess_aov)
# weeding large effect

ggplot(PHDIsuccess) +
  aes(x = weeding, y = success_rate, color = seeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#67C0AC", "#B660CD"))  
 # labs(x = "Treatment",
     #  y = "Cover (%)",
      # color = "Treatment")
       #title = "Non-Native Density by Weeding Treatment") 
```

## CLPU Success
```{r}
CLPUsuccess <- successrateeach %>% filter(species == "CLPU")

hist(CLPUsuccess $ success_rate)

clpusuccess_aov <- aov(sqrt(success_rate) ~ weeding * seeding, data = CLPUsuccess)

summary(clpusuccess_aov)

plot(clpusuccess_aov)

cooksclpusuccessaov <- cooks.distance(clpusuccess_aov)

plot(cooksclpusuccessaov)
# okay-ish normal???

leveneTest(success_rate ~ weeding * seeding, CLPUsuccess)
## variances are NOT equal :/

TukeyHSD(clpusuccess_aov)

effectsize::eta_squared(clpusuccess_aov)
# weeding large effect

ggplot(CLPUsuccess) +
  aes(x = weeding, y = success_rate, color = seeding) +
  geom_boxplot() +
 geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#67C0AC", "#B660CD"))  
 # labs(x = "Treatment",
     #  y = "Cover (%)",
      # color = "Treatment")
       #title = "Non-Native Density by Weeding Treatment") 
```

## total count of species per species & thatch cover
```{r}
thatchseeded_lm <- lm(sqrt(countsum) ~ species + thatch_avg, data = TNsum)

hist(thatch_seeded $ countsum)

plot(thatchseeded_lm)
# that scale-location ew

summary(thatchseeded_lm)

cooksthatchseededlm <- cooks.distance(thatchseeded_lm)

plot(cooksthatchseededlm)
# okay-ish normal???

effectsize::eta_squared(thatchseeded_lm)
# medium effect of both species and thatch_cover, with interaction!!!

ggplot(TNsum) +
  aes(x = thatch_avg, y = countsum, color = species) +
  geom_smooth(method="lm", formula = y ~ x) +
  geom_point() +
  scale_color_manual(values = c("#40d962", "#4054d9", "#d9409c")) +
  labs(x = "Thatch Cover (%)",
       y = "Total Count",
       color = "Species") + xlim(0,100)

ggplot(all_seeded) +
  aes(x = thatch_cover, y = count, color = species) +
  geom_smooth(method="lm", formula = y~x) +
  geom_point() +
  scale_color_manual(values = c("#40d962", "#4054d9", "#d9409c"))
  
# basically says that any thatch cover suppresses specifically CAME from germinating, but PHDI and CLPU germ are relatively the same 
```

## total native cover per came clpu and phdi 
```{r}
ggplot(all_seeded) +
  aes(x = success_rate, y = native_cover, color = species) +
  geom_smooth(method="lm", formula = y ~ x) +
  geom_point() +
  theme_minimal() # feels like a misleading figure tbh

hist(TN_seeded_wide $ native_cover)

natives_success_lm <- lm(native_cover ~ CAME + PHDI + CLPU, data = TN_seeded_wide)

summary(natives_success_lm)

plot(natives_success_lm)

cooksnativesuccesslm <- cooks.distance(natives_success_lm)

plot(cooksnativesuccesslm)

car::vif(natives_success_lm)

effectsize::eta_squared(natives_success_lm)
# CAME success sig effect on native cover
```

## success rate and cover of species
```{r}
## success rate and total cover > low success of CAME still leads to crazy cover, whereas even though PHDI and CLPU are way more successful, not good at maximizing cover
ggplot(all_seeded) +
  aes(x = success_rate, y = cover, color = species) +
  geom_smooth(method="lm", formula = y ~ x)  +
  geom_point()


###WIPPPP
```

## interesting?
```{r}
## species and percent of native cover they make up > CAME is responding well to the burn by increasing cover (reduction of thatch = yay)
ggplot(all_seeded) +
    aes(x = weeding, y = percent_seeded, color = species) +
  geom_boxplot() +
  facet_wrap(~species)

ggplot(all_seeded) +
    aes(x = weeding, y = cover, color = species) +
  geom_boxplot() +
  facet_wrap(~species)

ggplot(all_seeded) +
  aes(x = native_cover, y = cover, color = species) +
  geom_smooth(method = "lm", formula = y~x) +
  geom_point() ## nope

ggplot(veg_data_clean) +
  aes(x = thatch_cover, y = native_cover, color = weeding) +
  geom_point() 

ggplot(all_seeded) +
  aes(x = success_rate, y = percent_seeded)
```

```{r}
## LM native cover and nonnative cover
ggplot(all_seeded) +
         aes(x = nonnative_cover, y = native_cover, color = weeding) +
  geom_smooth(method = "lm", formula = y~x) +
  geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#38A800", "#FF327C", "#00A9E6", "#F77600")) +
  labs(x = "Nonnative Cover (%)",
       y = "Native Cover (%)",
       color = "Treatment") +
  ylim(0,100) + xlim(0,100)

N3_lm <- lm(native_cover ~ nonnative_cover * weeding, data = all_seeded)

summary(N3_lm)
plot(N3_lm)
car::vif(N3_lm, type='predictor')

NT_lm <- lm(native_cover ~ thatch_cover * weeding, data = all_seeded)
summary(NT_lm)


## LM native cover and thatch cover
ggplot(all_seeded) +
         aes(x = thatch_cover, y = native_cover, color = weeding) +
  geom_smooth(method = "lm", formula = y~x) +
  geom_point(position=position_jitterdodge(
   jitter.width = 0,
   jitter.height = 0,
    seed = NULL),
            alpha = 0.3) +
  theme_minimal() +
  scale_color_manual(values = c("#38A800", "#FF327C", "#00A9E6", "#F77600")) +
  labs(x = "Thatch Cover (%)",
       y = "Native Cover (%)",
       color = "Treatment") +
  ylim(0,100)+ xlim(0,100)

N3T_lm <- lm(native_cover ~ nonnative_cover + thatch_cover + weeding, data = all_seeded)
summary(N3T_lm)
```


## fire temp & fuel bed depth
```{r}
fuel_temp_ss <- fuel_burn_temp %>% 
  filter(tag_depth == "surface") %>% 
  mutate(block = case_when(
             block == "east" ~ "No Seed",
             block == "west" ~ "No Seed",
             block == "north" ~ "Low Seed",
             block == "south" ~ "High Seed")) %>% 
  mutate(block = fct_relevel(block, "No Seed", "Low Seed", "High Seed")) %>% 
  group_by(tag_depth)
  

ggplot(fuel_temp_ss,
       aes(x = fuel_depth,
           y = max_temp,
           color = block)) +
  geom_smooth(method = "lm", formula = y~x) + geom_point() +
  scale_color_manual(values = c("#e52e39", "#FFC567", "#67C0AC")) +
  labs(x = "Fuel Depth",
       y = "Maximum Temperature (C)",
       color = "Subplot") +
  ylim(0, 400)

ggplot(fuel_temp_ss) +
  aes(x = tag_depth, y = max_temp, color = block) +
  geom_boxplot()

fuel_temp_lm <- lm(max_temp ~ fuel_depth, data = fuel_temp_ss)
summary(fuel_temp_lm)
```